// Global Header
// ===
//

// Dependencies
// ---
@import 'styles/variables';
@import 'styles/mixins/clearfix';
@import 'styles/mixins/button';


// Root Component
// ---

.c-header {
    position: relative;
    z-index: $backdrop-layer;

    border-bottom: 1px solid $neutral-50;

    background-color: white;

    @media (min-width: $mediumish) {
        border-bottom: 2px solid $neutral-50;
    }

    // style override for our react-portal implementation. The classname generated by https://github.com/tajo/react-portal is hardcoded.
    // We'll remove this when we can make the classname configurable
    .openByClickOn {
        display: inline-block;
    }
}

.c-header__inner-wrapper {
    display: flex;
    align-items: center;
    padding: $unit;

    justify-content: space-between;

    @media (min-width: $largeish) {
        padding: $xlarge-unit;
    }

    .no-flexboxlegacy & {
        @include clearfix;

        display: block;
    }
}

.c-header__logo {
    display: block;
    margin-right: $unit;

    color: $brand-color;
    fill: currentColor;

    .no-flexboxlegacy & {
        display: inline-block;

        vertical-align: middle;
    }
}

.c-header__nav-wrapper {
    flex: 1 0 auto;

    text-align: left;

    .no-flexboxlegacy & {
        display: inline-block;
    }
}

.c-header__button-wrapper {
    display: flex;
    align-items: center;

    .no-flexboxlegacy & {
        float: right;
    }
}

.c-header__search-button {
    @include button;

    background: none;

    color: $link-color;
    font-weight: $font-weight-demibold;

    .c-icon {
        position: relative;
        top: -0.125em;
    }

    @media (min-width: $mediumish) {
        border: none;

        color: $link-color;

        .c-icon {
            margin-right: $unit/2;
        }
    }

    &:active,
    &:focus,
    &:hover {
        border-color: $secondary-brand-color;

        outline: none;
        background-color: $secondary-brand-color;

        color: $neutral-30;

        @media (min-width: $mediumish) {
            background-color: transparent;

            color: $link-color;
        }
    }
}

.c-header__search-button-text {
    position: relative; // For absolutely positioned after element

    display: none;

    @media (min-width: $largeish) {
        display: inline-block;
    }

    &::after {
        content: '';

        position: absolute;
        top: 100%;
        left: 0;

        width: 100%;
        border-bottom: 2px solid;

        opacity: 0;

        transition: opacity 0.3s, transform 0.3s;
        transform: translateY(-$small-unit);
    }

    .c-header__search-button:focus &,
    .c-header__search-button:hover &,
    .c-header__search-button.c--open & {
        &::after {
            opacity: 1;

            transform: translateY(0);
        }
    }
}

// Authenticated Header Search Button
// ---
.c-header__auth-search-button {
    display: inline-block;
    min-width: 25em;
    margin-left: $unit;
    padding: $unit $large-unit;
    border: 1px solid;
    border-color: $border-color;

    background-color: $neutral-30;
    border-radius: $border-radius;

    color: inherit;
    font-family: $font-family;
    line-height: normal;
    text-align: left;
    text-decoration: none;
    white-space: normal;

    .c-icon {
        position: relative;
        top: -0.125em;

        margin-right: $unit;
    }
}

// Mobile Menu Button
// ---

.c-header__menu-button {
    .c-icon {
        position: relative;

        margin-left: $unit/2;

        vertical-align: top;
    }

    // CT-1182 Disable hoverstate being triggered after search modal is closed. on touch devices
    // Ideal solution would be to cancle the hover event, but wasn't able to detect it. Browser bug maybe?
    .touch & {
        &:hover {
            color: inherit;
            background-color: inherit;
        }
    }
}


// Absolutely position header over a hero image
// ---
//

.c-header.c--over-hero {
    .c-header__inner-wrapper {
        position: absolute;
        top: 0;
        right: 0;
        left: 0;

        width: 100%;
        margin-right: auto;
        margin-left: auto;
    }
}


// Alternate Style with Light Text
// ---
// Notes:
// [1] reset default styling

.c-header.c--light-text {
    position: relative;

    border-bottom: none; // [1]

    background-color: none; // [1]
    box-shadow: none; // [1]

    .c-header__search-button,
    .c-header__logo {
        color: $neutral-30;
    }
}
